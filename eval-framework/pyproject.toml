[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eval-framework"
version = "0.1.0"
description = "A framework for evaluating AI models"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "click>=8.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "structlog>=24.1.0",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.0.0",
    "mypy>=0.900",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.31.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=eval_framework --cov-report=term-missing"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.coverage.run]
source = ["src/eval_framework"]
omit = [
    "tests/*",
    "setup.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 